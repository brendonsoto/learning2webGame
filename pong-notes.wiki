= Pong =

Just created the repo.

Why Pong? Because it seems like the next logical step from Breakout.
It has all of the same properties with Breakout, but with an AI aspect.

== Gameplan ==
1. X - Create the base HTML
2. X - Create a ball
3. X - Create basic movement for the ball
4. X - Implement collision detection for the walls
5. X - Create a paddle for the user
6. X - Create movement for the paddle
7. X - Implement collision detection for the user paddle
8. X - Implement collision detection for the user wall to create the lose case
9. X - Create a paddle for the AI
10. X - Implement collision detection for the AI paddle
11. X - Implement collision detection for the AI wall to create a lose case
12. X - Implement AI
13. X - Add a score component
14. X - Display the score
15. X - Add sensitivity areas to the paddles
16. X - Add a score to win the game
17. X - Make the ball appear on the loser's side
18. X - Make a pause button
19. X - Create a start screen


For the AI, the original Pong game seems to have the normal mode AI simply move up if the ball is above its paddle and down if its below. Simple following maneuver.

=== Reflections ===
Collision detection is tricky at high speeds. AI is also tricky to create. But it's all been insightful as to what's involved in making a game.

For collision detection, the concept itself is simple enough, but there seems to be opportunities for edge cases when calculating collisions. Plus it's a challenge handling collisions while also making the animations seem smooth when objects collide. The animations in here are simple too!

For AI, there are so many paths to take for programming behavior. You could just set the AI to follow the ball in a 1:1 like ratio, but then the player could never beat the AI. The AI implementation here is a simple delayed movement; move up if the ball is above or down if below. It's easy to see how a more advanced AI would require a lot more complexity.

Overall this was fun! It was my first exposure to creating AI and a game on my own (this was after doing the MDN breakout tutorial). I feel like I've grown a bit more as a developer and have definitely more of an appreciation for the work that goes into games.
